@using TicTacToe.Models.Game
@model TicTacToe.Models.Game.Game

@{
    Layout = null;
    var winBox = Model.Borad.GameBoard.FirstOrDefault(e => e.IsWinBox);
    var style = winBox != null && Model.GameStatus.Id == GameStatus.Win ? "btn-success" : "btn-danger";
}

<div class="container mt-5">
    @Html.HiddenFor(m => m.MovesCount, new { Value = Model.MovesCount })


    @for (int index = 0; index < Model.Borad.GameBoard.Count; index += 3)
    {
        <div class="row justify-content-center mb-4">
            <div class="col-3 col-sm-3 col-md-2 col-lg-2">

                @Html.TextBoxFor(m => m.Borad.GameBoard[index].Positon, new { @type = "hidden", Value = Model.Borad.GameBoard[index].Positon })
                @Html.TextBoxFor(m => m.Borad.GameBoard[index].IsEnabled, new { @class = "isEnabled-js", @type = "hidden", Value = Model.Borad.GameBoard[index].IsEnabled })
                @Html.TextBoxFor(m => m.Borad.GameBoard[index].Value, new { @type = "hidden", Value = Model.Borad.GameBoard[index].Value })

                <button type="submit" value="userPlay" class="btn @(Model.Borad.GameBoard[index].IsWinBox ? style : "btn-light") button-options-js" @(Model.Borad.GameBoard[index].IsEnabled ? null : "disabled='disabled'")>@Model.Borad.GameBoard[index].Value</button>
            </div>
            <div class="col-3 col-sm-3 col-md-2 col-lg-2">
                @Html.TextBoxFor(m => m.Borad.GameBoard[index + 1].Positon, new { @class = "isEnabled-js", @type = "hidden", Value = Model.Borad.GameBoard[index + 1].Positon })
                @Html.TextBoxFor(m => m.Borad.GameBoard[index + 1].IsEnabled, new { @class = "isEnabled-js", @type = "hidden", Value = Model.Borad.GameBoard[index + 1].IsEnabled })
                @Html.TextBoxFor(m => m.Borad.GameBoard[index + 1].Value, new { @type = "hidden", Value = Model.Borad.GameBoard[index + 1].Value })

                <button type="submit" value="userPlay" class="btn @(Model.Borad.GameBoard[index + 1].IsWinBox ? style : "btn-light") button-options-js" @(Model.Borad.GameBoard[index + 1].IsEnabled ? null : "disabled='disabled'")>@Model.Borad.GameBoard[index + 1].Value</button>
            </div>
            <div class="col-3 col-sm-3 col-md-2 col-lg-2">
                @Html.TextBoxFor(m => m.Borad.GameBoard[index + 2].Positon, new { @type = "hidden", Value = Model.Borad.GameBoard[index + 2].Positon })
                @Html.TextBoxFor(m => m.Borad.GameBoard[index + 2].IsEnabled, new { @class = "isEnabled-js", @type = "hidden", Value = Model.Borad.GameBoard[index + 2].IsEnabled })
                @Html.TextBoxFor(m => m.Borad.GameBoard[index + 2].Value, new { @type = "hidden", Value = Model.Borad.GameBoard[index + 2].Value })

                <button type="submit" value="userPlay" class="btn @(Model.Borad.GameBoard[index + 2].IsWinBox ? style : "btn-light") button-options-js" @(Model.Borad.GameBoard[index + 2].IsEnabled ? null : "disabled='disabled'")>@Model.Borad.GameBoard[index + 2].Value</button>
            </div>
        </div>
    }

    <div class="m-2">
        @if (Model.GameStatus.Id == GameStatus.Win)
        {
            <div class="row justify-content-center mt-5">
                <div class="col-6 alert alert-success text-center">
                    <label>@Model.GameStatus.Name</label>
                </div>
            </div>
        }
        else if (Model.GameStatus.Id == GameStatus.Lose)
        {
            <div class="row justify-content-center mt-5">
                <div class="col-6 alert alert-danger text-center">
                    <label>@Model.GameStatus.Name</label>
                </div>
            </div>
        }
        else if (Model.GameStatus.Id == GameStatus.Draw)
        {
            <div class="row justify-content-center mt-5">
                <div class="col-6 alert alert-warning text-center">
                    <label>@Model.GameStatus.Name</label>
                </div>
            </div>
        }
    </div>

</div>
